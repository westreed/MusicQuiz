import PluginVariables as msqcvar;
import opening as op;
import TriggerEditor.BGMPlayer as BGM;
import MusicSetting as ms;
import System as sys;
import functions as fc;

const s = StringBuffer(1024);
const s2 = StringBuffer(1024);
var MusicStep			= 0;	//게임진행단계 1,오프닝->시작 2,음악세팅 3,음악재생중 4,음악재생종료후2초대기 5,종료세팅후 2로 보내기
var MusicTimer			= 0;
var MusicTemp			= 0;
var MusicDelay			= 0;
var MusicHintOpen1		= 0;
var MusicHintOpen2		= 0;
var MusicOpen			= 0;	//1이면 정답공개, 0이면 미공개
var MusicAnswerUser	= 0;	//정답을 맞힌 유저
var MusicRemain		= 0;
var CurrentMusic		= 0;
var EndingDelay			= 0;//MusicSetting의 EndingTimer*36 값 대입.
var VoteAll				= 0;
var MusicNumber2		= 0;//MusicNumber를 대신할 값.
const MusicTextU		= PVariable();
const CleanText			= PVariable();
const UserAnswer		= PVariable();
const VoteUser			= PVariable();
const Ending			= PVariable();
const TextMeassge		= PVariable();
const TextType			= PVariable();
var MusicPlayFront		= 0; //순차재생부분 MusicNumber값에 도달하면 재순환, 재순환시 첫인덱스가 0이면 종료
var MusicPlayRear		= 0; //문제를 못맞췄을 때 채울 인덱스번호. 못맞출때마다 1씩 증가. 재순환시 0으로 초기화
//const pcolor				= [Db("\x08"), Db("\x0E"), Db("\x0F"), Db("\x10"), Db("\x11"), Db("\x15"), Db("\x16")];

const MusicIndex	= EUDArray(ms.MusicNumber);
const MusicPlay		= EUDArray(ms.MusicNumber);
//원형 배열로 사용, 셔플 후 첫 인덱스부터 진행하며 맞추면 해당인덱스 0대입, 못맞추면 앞칸부터 해당노래인덱스값 대입 후 현재인덱스 0대입.


function shuffle(arr, length) {
	const arr_ = EUDArray.cast(arr);
	var temp;
	var rand;
	for(var i = 0; i < length-1; i++) {
		rand = dwrand() % (length - i) + i;
		temp = arr_[i];
		arr_[i] = arr_[rand];
		arr_[rand] = temp;
	}
}
function musicInit(){
	for(var i=0; i<ms.MusicNumber; i++){
		MusicPlay[i] = i+1;
		MusicIndex[i] = i+1;
	}
	EndingDelay = ms.EndingTimer*36;
	if(ms.MusicSelect == 0){MusicNumber2 = ms.MusicNumber;}
	MusicRemain = MusicNumber2;
	if(ms.MusicShuffle == 1){shuffle(MusicPlay, ms.MusicNumber);}
}
function musicSystem(){
	if(MusicStep == 1){musicInit(); MusicStep = 2;}
	if(MusicStep == 2){
		MusicAnswerUser = 0;
		MusicDelay = 0;
		MusicHintOpen1 = 0;
		MusicHintOpen2 = 0;
		MusicOpen = 0;
		VoteAll = 0;
		MusicTemp = MusicPlay[MusicPlayFront];  //못맞춘 경우에 사용할 변수
		CurrentMusic = MusicTemp;
		if(ms.MusicShort == 1 && op.setting5 == 0){MusicTimer = ms.ShortTimer;} //짧게 듣기가 활성화된 경우, 설정된 길이만큼
		else{MusicTimer = ms.MusicLength[MusicTemp-1];} //짧게 듣기가 비활성화 된 경우, 음원 길이만큼
		//MusicStart = MusicLength[MusicTemp] - 10;
		MusicPlay[MusicPlayFront] = 0;
		MusicPlayFront++;
		MusicStep = 3;
		foreach(p : EUDLoopPlayer('Human')){MusicTextU[p] = 1; CleanText[p] = 1; VoteUser[p] = 0;}
	}
	if(MusicStep == 3){
		if(MusicTimer > 0){
			MusicDelay += 1;
			if(MusicDelay > 35){
				MusicDelay = 0;
				MusicTimer -= 1;
				foreach(p : EUDLoopPlayer('Human')){MusicTextU[p] = 1;}
			}
			if(MusicHintOpen1 == 0 && MusicAnswerUser == 0 && MusicTimer <= ms.MusicStart){
				MusicHintOpen1 = 1; foreach(p : EUDLoopPlayer('Human')){MusicTextU[p] = 1;}
			}
			if(MusicHintOpen2 == 0 && MusicAnswerUser == 0 && MusicTimer <= ms.MusicEnd){
				MusicHintOpen2 = 1; foreach(p : EUDLoopPlayer('Human')){MusicTextU[p] = 1;}
			}
		}
		if(MusicTimer == 0){
			CurrentMusic = 0;
			MusicStep = 4;
			MusicDelay = 0;
			if(op.setting1 == 0){   //정답공개설정
				if(MusicAnswerUser == 0){
					MusicOpen = 1;
					MusicRemain--;
				}
			}
			else{
				if(MusicAnswerUser == 0){
					MusicPlay[MusicPlayRear] = MusicTemp;
					MusicPlayRear++;
				}
			}
		}
		const VoteN = sys.UserNumber;
		if(VoteAll >= ms.VoteNum[VoteN-1] || Deaths(fc.superUser, Exactly, 2, ms.KEY)){ //투표
			CurrentMusic = 0;
			MusicDelay = 0;
			MusicStep = 4;
			if(MusicAnswerUser == 0){
				if(op.setting1 == 0){ //정답공개로 설정했을 때
					MusicOpen = 1;
					MusicRemain--;
				}
				else{				 //정답 비공개처리
					MusicPlay[MusicPlayRear] = MusicTemp;
					MusicPlayRear++;
				}
			}
			//tct.printAll("\x1F■ \x04스킵투표로 현재곡을 스킵합니다.");
			if(VoteAll >= ms.VoteNum[VoteN-1]){
				foreach(p : EUDLoopPlayer('Human', None, None)){
					setcurpl(p);
					s2.print("\x1F■ \x04스킵투표로 현재곡을 스킵합니다.");
					MusicTextU[p] = 1;
				}
			}
			else if(Deaths(fc.superUser, Exactly, 2, ms.KEY)){
				foreach(p : EUDLoopPlayer('Human', None, None)){
					setcurpl(p);
					s2.print("\x1F■ \x04방장이 현재곡을 스킵했습니다.");
					MusicTextU[p] = 1;
				}
			}
			SetDeaths(Force1, SetTo, 4, ms.EFFECT);
		}
	}
	if(MusicStep == 4){
		MusicDelay++;
		if(MusicDelay > 71){
			MusicDelay = 0;
			MusicStep = 5;
		}
	}
	if(MusicStep == 5){
		MusicStep = 2;
		if(MusicRemain > 0){
			if(MusicPlayFront == MusicNumber2){
				shuffle(MusicPlay, MusicRemain);
				MusicPlayFront = 0;
				MusicPlayRear = 0;
				if(MusicPlay[MusicPlayFront] == 0){ //재순회했을 때, 0번인덱스가 0인 경우
					MusicStep = 20;
					CurrentMusic = ms.EndingMusic;
				}
			}
			else{
				if(MusicPlay[MusicPlayFront] == 0){ //순회 전에 값이 0인 경우
					MusicStep = 20;
					CurrentMusic = ms.EndingMusic;
				}
			}
		}
		else{
			MusicStep = 20;
			CurrentMusic = ms.EndingMusic;
		}
	}
}
function musicPlay(cp){ //플레이어 텍스트 및 정답관리
	if(MusicStep > 0){
		if(!Deaths(cp, Exactly, CurrentMusic, ms.MUSIC)){
			SetDeaths(cp, SetTo, CurrentMusic, ms.MUSIC);
			BGM.SetBGM(CurrentMusic);
		}
		if(MusicStep < 20){ //엔딩이 아닐 때
			if(MusicTextU[cp] == 1){
				MusicTextU[cp] = 0;
				if(IsUserCP()){
					s.insert(0);
					if(MusicStep <= 4){
						s.append("\x13\x1E남은곡 ( ", MusicRemain, " / ", MusicNumber2, " )\n");
						if(ms.MusicShort == 1 && op.setting5 == 0){ //짧게듣기가 활성화된 경우
							if(MusicAnswerUser == 0){s.append("\x13\x19음악\x04을 듣고 \x11답\x04을 입력하세요.\n");}
							else{s.append("\x13\x11정답 곡\x04을 재생하고 있습니다.\n");}
						}
						else{ //짧게듣기가 비활성화된 경우
							s.append("\x13\x19음악\x04을 듣고 \x11답\x04을 입력하세요.\n");
							
						}
						s.append("\x13\x1F- \x1D", MusicTimer, "초 \x1F-\n");
						if(op.setting3 == 0){if(MusicHintOpen1 == 1){s.append("\n\x13\x07",ptr2s(op.settingName3)," \x04: ", ptr2s(ms.MusicHint1[MusicTemp-1]), "");}}
						if(op.setting4 == 0){if(MusicHintOpen2 == 1){s.append("\n\x13\x07",ptr2s(op.settingName4)," \x04: ", ptr2s(ms.MusicHint2[MusicTemp-1]), "");}}
						if(MusicOpen == 1){s.append("\n\x13\x1F정답 \x04: ", ptr2s(ms.MusicAnswer[MusicTemp-1]), "");}
					}
				}
			}
			if(IsUserCP()){s.DisplayAt(0);}
			if(op.setting2 == 0){
				const VoteN = sys.UserNumber;
				if(VoteAll == 0){eprintln("\x1D( \x19\"K\"\x04키를 누르면, 곡을 넘깁니다. \x1D)");}
				else{eprintln("\x1D( \x19\"K\"\x04키를 누르면, 곡을 넘깁니다. \x1E투표인원 ", VoteAll, "/", ms.VoteNum[VoteN-1], " \x1D)");}
			}
			else{eprintln("\x1D( \x04스킵이 \x06비활성화\x04되어 있습니다. \x1D)");}
			if(CleanText[cp] == 1){
				CleanText[cp] = 0;
				if(IsUserCP()){s2.printfAt(0, "\n\n\n\n\n\n\n\n");}
			}
			if(MusicStep == 3){
				if(Deaths(cp, Exactly, 1, ms.KEY)){
					if(op.setting2 == 0){
						if(VoteUser[cp] == 0){
							VoteUser[cp] = 1;
							VoteAll += 1;
							s2.print("\x08！\x04스킵에 투표하셨습니다.");
							SetDeaths(cp, SetTo, 2, ms.EFFECT);
						}
					}
				}
				if(Deaths(cp, AtLeast, 1, ms.ANSWER)){ //정답처리
					const key = fc.GetDeath(cp, ms.ANSWER);
					if(key-1 == MusicTemp){
						if(MusicOpen  == 0 && MusicAnswerUser == 0){
							MusicAnswerUser = 1;
							MusicOpen = 1;
							MusicRemain--;
							if(ms.MusicShort == 1 && op.setting5 == 0){MusicTimer = ms.MusicLength[MusicTemp-1];}
							UserAnswer[cp] += 1;
							foreach(p : EUDLoopPlayer('Human', None, None)){
								setcurpl(p);
								s2.print("\x1F■ ", PColor(cp), PName(cp), "\x04님께서 정답을 맞추셨습니다!");
								MusicTextU[p] = 1;
							}
							setcurpl(cp);
							SetDeaths(Force1, SetTo, 5, ms.EFFECT);
							SetScore(cp, Add, 1, Custom);
						}
					}
				}
			}
		}
		if(MusicStep == 20){
			if(Ending[cp] == 0){
				s2.insert(0);
				s2.append(ptr2s(ms.EndingText1), "\n");
				s2.append(ptr2s(ms.EndingText2), "\n");
				s2.append(ptr2s(ms.EndingText3), "\n");
				s2.append(ptr2s(ms.EndingText4), "\n");
				s2.append(ptr2s(ms.EndingText5), "\n");
				s2.append(ptr2s(ms.EndingText6), "\n");
				s2.append(ptr2s(ms.EndingText7));
			}
			if(IsUserCP()){s2.DisplayAt(0);}
			if(Ending[cp] > EndingDelay){Victory();}
			Ending[cp] += 1;
		}
		else{
			if(TextMeassge[cp] < 4320){TextMeassge[cp] += 1;}
			else{
				TextMeassge[cp] = 0;
				if(TextType[cp] == 0){
					TextType[cp] = 1;
					s2.print("\x1F■ \x04방장은 다른 유저를 \x08강퇴\x04할 수 있는 권한을 가지고 있습니다.\n   \x1E\"!강퇴\"+\"플레이어숫자\"를 채팅으로 치면 강퇴됩니다. Ex. !강퇴1");
				}
				else if(TextType[cp] == 1){
					TextType[cp] = 0;
					s2.print("\x1F■ \x04방장은 \x02P키\x04를 눌러서 곡을 \x06강제로 스킵\x04할 수 있습니다.");
				}
			}
		}
	}
}